// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gst {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct ByteArrayInterface : IEquatable<ByteArrayInterface> {

		public byte Data;
		private UIntPtr len;
		public ulong Len {
			get {
				return (ulong) len;
			}
			set {
				len = new UIntPtr (value);
			}
		}
		private IntPtr _resize;
		[MarshalAs (UnmanagedType.ByValArray, SizeConst=4)]
		private IntPtr[] _gstGstReserved;

		public static Gst.ByteArrayInterface Zero = new Gst.ByteArrayInterface ();

		public static Gst.ByteArrayInterface New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Gst.ByteArrayInterface.Zero;
			return (Gst.ByteArrayInterface) Marshal.PtrToStructure (raw, typeof (Gst.ByteArrayInterface));
		}

		public bool Equals (ByteArrayInterface other)
		{
			return true && Data.Equals (other.Data) && Len.Equals (other.Len) && _resize.Equals (other._resize);
		}

		public override bool Equals (object other)
		{
			return other is ByteArrayInterface && Equals ((ByteArrayInterface) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Data.GetHashCode () ^ Len.GetHashCode () ^ _resize.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
